name: Push
on: push
env:
  APP: esyfo-info-frontend
  branchname: ${{ github.ref_name }}
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
jobs:
  build-and-publish:
    name: Bygg, test og push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://npm.pkg.github.com'
      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-pr-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-
      - name: Generer versjon og image navn
        run: |
          TIME=$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          COMMIT=$(git rev-parse --short=8 HEAD)
          VERSION=$TIME-$COMMIT
          echo "IMAGE=ghcr.io/navikt/$APP:$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - run: echo $VERSION > VERSION.txt
      - name: Last opp VERSION til neste job
        uses: actions/upload-artifact@v1
        with:
          name: VERSION.txt
          path: VERSION.txt
      - name: Install npm dependencies
        run: npm ci
      - name: Run prettier
        run: npm run prettier:check
      - name: Run lint
        run: npm run lint
      - name: Build application
        run: npm run build
      - name: Run cypress
        uses: cypress-io/github-action@v4
        with:
          install: false
          record: false
          start: npm run start-ingen-dekorator
          wait-on: http://localhost:8080/syk/info/api/isAlive
      - uses: actions/upload-artifact@v1
        if: ${{ always() }}
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: team-esyfo
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-to-dev-gcp:
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/dev-')
    name: Deploy to dev-gcp
    needs: build-and-publish
    runs-on: ubuntu-latest
    concurrency: deploy-to-dev-gcp
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: VERSION.txt
          path: .
      - run: echo "VERSION=`cat VERSION.txt`" >> $GITHUB_ENV
      - run: echo "IMAGE=ghcr.io/navikt/$APP:$VERSION" >> $GITHUB_ENV
      - name: Deploy to dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais-dev.yaml
          VAR: image=${{ needs.build.outputs.image }}

  deploy-to-prod-gcp:
    if: github.ref == 'refs/heads/master'
    name: Deploy to prod-gcp
    needs: build-and-publish
    runs-on: ubuntu-latest
    concurrency: deploy-to-prod-gcp
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: VERSION.txt
          path: .
      - run: echo "VERSION=`cat VERSION.txt`" >> $GITHUB_ENV
      - run: echo "IMAGE=ghcr.io/navikt/$APP:$VERSION" >> $GITHUB_ENV
      - name: Deploy to prod-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais-prod.yaml
          VAR: image=${{ needs.build.outputs.image }}

  deploy-demo-to-dev-gcp:
    if: github.ref == 'refs/heads/master'
    name: Deploy to dev-gcp (Demo)
    needs: build-and-publish
    runs-on: ubuntu-latest
    concurrency: deploy-demo-to-dev-gcp
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: VERSION.txt
          path: .
      - run: echo "VERSION=`cat VERSION.txt`" >> $GITHUB_ENV
      - run: echo "IMAGE=ghcr.io/navikt/$APP:$VERSION" >> $GITHUB_ENV
      - name: Deploy demo to dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais-demo.yaml
          VAR: image=${{ needs.build.outputs.image }}
